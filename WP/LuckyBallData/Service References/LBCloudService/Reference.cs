//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace LuckyBallData.LBCloudService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LBCloudService.ISqlService")]
    public interface ISqlService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLotteryData", ReplyAction="http://tempuri.org/ISqlService/GetLotteryDataResponse")]
        System.IAsyncResult BeginGetLotteryData(int issue, System.AsyncCallback callback, object asyncState);
        
        string EndGetLotteryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetAllLotteries", ReplyAction="http://tempuri.org/ISqlService/GetAllLotteriesResponse")]
        System.IAsyncResult BeginGetAllLotteries(System.AsyncCallback callback, object asyncState);
        
        string EndGetAllLotteries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLotteryCount", ReplyAction="http://tempuri.org/ISqlService/GetLotteryCountResponse")]
        System.IAsyncResult BeginGetLotteryCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetLotteryCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLotteriesByIndex", ReplyAction="http://tempuri.org/ISqlService/GetLotteriesByIndexResponse")]
        System.IAsyncResult BeginGetLotteriesByIndex(int index_from, int index_to, System.AsyncCallback callback, object asyncState);
        
        string EndGetLotteriesByIndex(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLotteriesByIssue", ReplyAction="http://tempuri.org/ISqlService/GetLotteriesByIssueResponse")]
        System.IAsyncResult BeginGetLotteriesByIssue(int issue_from, int issue_to, System.AsyncCallback callback, object asyncState);
        
        string EndGetLotteriesByIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetDataVersion", ReplyAction="http://tempuri.org/ISqlService/GetDataVersionResponse")]
        System.IAsyncResult BeginGetDataVersion(System.AsyncCallback callback, object asyncState);
        
        string EndGetDataVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetAttributesTemplate", ReplyAction="http://tempuri.org/ISqlService/GetAttributesTemplateResponse")]
        System.IAsyncResult BeginGetAttributesTemplate(System.AsyncCallback callback, object asyncState);
        
        string EndGetAttributesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLatestAttributes", ReplyAction="http://tempuri.org/ISqlService/GetLatestAttributesResponse")]
        System.IAsyncResult BeginGetLatestAttributes(System.AsyncCallback callback, object asyncState);
        
        string EndGetLatestAttributes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLatestReleaseInfo", ReplyAction="http://tempuri.org/ISqlService/GetLatestReleaseInfoResponse")]
        System.IAsyncResult BeginGetLatestReleaseInfo(System.AsyncCallback callback, object asyncState);
        
        string EndGetLatestReleaseInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetMatrixTableItem", ReplyAction="http://tempuri.org/ISqlService/GetMatrixTableItemResponse")]
        System.IAsyncResult BeginGetMatrixTableItem(int candidateCount, int selectCount, System.AsyncCallback callback, object asyncState);
        
        string EndGetMatrixTableItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetHelp", ReplyAction="http://tempuri.org/ISqlService/GetHelpResponse")]
        System.IAsyncResult BeginGetHelp(System.AsyncCallback callback, object asyncState);
        
        string EndGetHelp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetAllLotteriesBase", ReplyAction="http://tempuri.org/ISqlService/GetAllLotteriesBaseResponse")]
        System.IAsyncResult BeginGetAllLotteriesBase(System.AsyncCallback callback, object asyncState);
        
        string EndGetAllLotteriesBase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLotteriesBaseByIndex", ReplyAction="http://tempuri.org/ISqlService/GetLotteriesBaseByIndexResponse")]
        System.IAsyncResult BeginGetLotteriesBaseByIndex(int index_from, int index_to, System.AsyncCallback callback, object asyncState);
        
        string EndGetLotteriesBaseByIndex(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLotteriesBaseByIssue", ReplyAction="http://tempuri.org/ISqlService/GetLotteriesBaseByIssueResponse")]
        System.IAsyncResult BeginGetLotteriesBaseByIssue(int issue_from, int issue_to, System.AsyncCallback callback, object asyncState);
        
        string EndGetLotteriesBaseByIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetVersion", ReplyAction="http://tempuri.org/ISqlService/GetVersionResponse")]
        System.IAsyncResult BeginGetVersion(ref int version, ref long revisions, ref int latestIssue, System.AsyncCallback callback, object asyncState);
        
        void EndGetVersion(ref int version, ref long revisions, ref int latestIssue, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/RegisterUserChannel", ReplyAction="http://tempuri.org/ISqlService/RegisterUserChannelResponse")]
        System.IAsyncResult BeginRegisterUserChannel(string userId, string channelUri, string platform, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterUserChannel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetUserChannels", ReplyAction="http://tempuri.org/ISqlService/GetUserChannelsResponse")]
        System.IAsyncResult BeginGetUserChannels(string platform, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetUserChannels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/RememberUserLastLoginDate", ReplyAction="http://tempuri.org/ISqlService/RememberUserLastLoginDateResponse")]
        System.IAsyncResult BeginRememberUserLastLoginDate(string userId, System.AsyncCallback callback, object asyncState);
        
        void EndRememberUserLastLoginDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetLatestSoftwareVersion", ReplyAction="http://tempuri.org/ISqlService/GetLatestSoftwareVersionResponse")]
        System.IAsyncResult BeginGetLatestSoftwareVersion(ref int version, ref bool schemaChanged, System.AsyncCallback callback, object asyncState);
        
        void EndGetLatestSoftwareVersion(ref int version, ref bool schemaChanged, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISqlService/GetReleaseNotes", ReplyAction="http://tempuri.org/ISqlService/GetReleaseNotesResponse")]
        System.IAsyncResult BeginGetReleaseNotes(int fromVersion, System.AsyncCallback callback, object asyncState);
        
        string EndGetReleaseNotes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISqlServiceChannel : LuckyBallData.LBCloudService.ISqlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLotteriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLotteriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteriesByIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteriesByIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteriesByIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteriesByIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAttributesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAttributesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestReleaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestReleaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatrixTableItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatrixTableItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHelpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHelpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLotteriesBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLotteriesBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteriesBaseByIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteriesBaseByIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteriesBaseByIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteriesBaseByIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int version {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public long revisions {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        public int latestIssue {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestSoftwareVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestSoftwareVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int version {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public bool schemaChanged {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReleaseNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReleaseNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SqlServiceClient : System.ServiceModel.ClientBase<LuckyBallData.LBCloudService.ISqlService>, LuckyBallData.LBCloudService.ISqlService {
        
        private BeginOperationDelegate onBeginGetLotteryDataDelegate;
        
        private EndOperationDelegate onEndGetLotteryDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLotteriesDelegate;
        
        private EndOperationDelegate onEndGetAllLotteriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLotteriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteryCountDelegate;
        
        private EndOperationDelegate onEndGetLotteryCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteryCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteriesByIndexDelegate;
        
        private EndOperationDelegate onEndGetLotteriesByIndexDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteriesByIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteriesByIssueDelegate;
        
        private EndOperationDelegate onEndGetLotteriesByIssueDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteriesByIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataVersionDelegate;
        
        private EndOperationDelegate onEndGetDataVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAttributesTemplateDelegate;
        
        private EndOperationDelegate onEndGetAttributesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAttributesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestAttributesDelegate;
        
        private EndOperationDelegate onEndGetLatestAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestReleaseInfoDelegate;
        
        private EndOperationDelegate onEndGetLatestReleaseInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestReleaseInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMatrixTableItemDelegate;
        
        private EndOperationDelegate onEndGetMatrixTableItemDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatrixTableItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHelpDelegate;
        
        private EndOperationDelegate onEndGetHelpDelegate;
        
        private System.Threading.SendOrPostCallback onGetHelpCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLotteriesBaseDelegate;
        
        private EndOperationDelegate onEndGetAllLotteriesBaseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLotteriesBaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteriesBaseByIndexDelegate;
        
        private EndOperationDelegate onEndGetLotteriesBaseByIndexDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteriesBaseByIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteriesBaseByIssueDelegate;
        
        private EndOperationDelegate onEndGetLotteriesBaseByIssueDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteriesBaseByIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVersionDelegate;
        
        private EndOperationDelegate onEndGetVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterUserChannelDelegate;
        
        private EndOperationDelegate onEndRegisterUserChannelDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterUserChannelCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserChannelsDelegate;
        
        private EndOperationDelegate onEndGetUserChannelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserChannelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRememberUserLastLoginDateDelegate;
        
        private EndOperationDelegate onEndRememberUserLastLoginDateDelegate;
        
        private System.Threading.SendOrPostCallback onRememberUserLastLoginDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestSoftwareVersionDelegate;
        
        private EndOperationDelegate onEndGetLatestSoftwareVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestSoftwareVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReleaseNotesDelegate;
        
        private EndOperationDelegate onEndGetReleaseNotesDelegate;
        
        private System.Threading.SendOrPostCallback onGetReleaseNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SqlServiceClient() {
        }
        
        public SqlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SqlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SqlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SqlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetLotteryDataCompletedEventArgs> GetLotteryDataCompleted;
        
        public event System.EventHandler<GetAllLotteriesCompletedEventArgs> GetAllLotteriesCompleted;
        
        public event System.EventHandler<GetLotteryCountCompletedEventArgs> GetLotteryCountCompleted;
        
        public event System.EventHandler<GetLotteriesByIndexCompletedEventArgs> GetLotteriesByIndexCompleted;
        
        public event System.EventHandler<GetLotteriesByIssueCompletedEventArgs> GetLotteriesByIssueCompleted;
        
        public event System.EventHandler<GetDataVersionCompletedEventArgs> GetDataVersionCompleted;
        
        public event System.EventHandler<GetAttributesTemplateCompletedEventArgs> GetAttributesTemplateCompleted;
        
        public event System.EventHandler<GetLatestAttributesCompletedEventArgs> GetLatestAttributesCompleted;
        
        public event System.EventHandler<GetLatestReleaseInfoCompletedEventArgs> GetLatestReleaseInfoCompleted;
        
        public event System.EventHandler<GetMatrixTableItemCompletedEventArgs> GetMatrixTableItemCompleted;
        
        public event System.EventHandler<GetHelpCompletedEventArgs> GetHelpCompleted;
        
        public event System.EventHandler<GetAllLotteriesBaseCompletedEventArgs> GetAllLotteriesBaseCompleted;
        
        public event System.EventHandler<GetLotteriesBaseByIndexCompletedEventArgs> GetLotteriesBaseByIndexCompleted;
        
        public event System.EventHandler<GetLotteriesBaseByIssueCompletedEventArgs> GetLotteriesBaseByIssueCompleted;
        
        public event System.EventHandler<GetVersionCompletedEventArgs> GetVersionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterUserChannelCompleted;
        
        public event System.EventHandler<GetUserChannelsCompletedEventArgs> GetUserChannelsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RememberUserLastLoginDateCompleted;
        
        public event System.EventHandler<GetLatestSoftwareVersionCompletedEventArgs> GetLatestSoftwareVersionCompleted;
        
        public event System.EventHandler<GetReleaseNotesCompletedEventArgs> GetReleaseNotesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLotteryData(int issue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteryData(issue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLotteryData(System.IAsyncResult result) {
            return base.Channel.EndGetLotteryData(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int issue = ((int)(inValues[0]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLotteryData(issue, callback, asyncState);
        }
        
        private object[] OnEndGetLotteryData(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLotteryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteryDataCompleted(object state) {
            if ((this.GetLotteryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteryDataCompleted(this, new GetLotteryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteryDataAsync(int issue) {
            this.GetLotteryDataAsync(issue, null);
        }
        
        public void GetLotteryDataAsync(int issue, object userState) {
            if ((this.onBeginGetLotteryDataDelegate == null)) {
                this.onBeginGetLotteryDataDelegate = new BeginOperationDelegate(this.OnBeginGetLotteryData);
            }
            if ((this.onEndGetLotteryDataDelegate == null)) {
                this.onEndGetLotteryDataDelegate = new EndOperationDelegate(this.OnEndGetLotteryData);
            }
            if ((this.onGetLotteryDataCompletedDelegate == null)) {
                this.onGetLotteryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteryDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteryDataDelegate, new object[] {
                        issue}, this.onEndGetLotteryDataDelegate, this.onGetLotteryDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetAllLotteries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLotteries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetAllLotteries(System.IAsyncResult result) {
            return base.Channel.EndGetAllLotteries(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLotteries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetAllLotteries(callback, asyncState);
        }
        
        private object[] OnEndGetAllLotteries(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetAllLotteries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLotteriesCompleted(object state) {
            if ((this.GetAllLotteriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLotteriesCompleted(this, new GetAllLotteriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLotteriesAsync() {
            this.GetAllLotteriesAsync(null);
        }
        
        public void GetAllLotteriesAsync(object userState) {
            if ((this.onBeginGetAllLotteriesDelegate == null)) {
                this.onBeginGetAllLotteriesDelegate = new BeginOperationDelegate(this.OnBeginGetAllLotteries);
            }
            if ((this.onEndGetAllLotteriesDelegate == null)) {
                this.onEndGetAllLotteriesDelegate = new EndOperationDelegate(this.OnEndGetAllLotteries);
            }
            if ((this.onGetAllLotteriesCompletedDelegate == null)) {
                this.onGetAllLotteriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLotteriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLotteriesDelegate, null, this.onEndGetAllLotteriesDelegate, this.onGetAllLotteriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLotteryCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteryCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int LuckyBallData.LBCloudService.ISqlService.EndGetLotteryCount(System.IAsyncResult result) {
            return base.Channel.EndGetLotteryCount(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteryCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLotteryCount(callback, asyncState);
        }
        
        private object[] OnEndGetLotteryCount(System.IAsyncResult result) {
            int retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLotteryCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteryCountCompleted(object state) {
            if ((this.GetLotteryCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteryCountCompleted(this, new GetLotteryCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteryCountAsync() {
            this.GetLotteryCountAsync(null);
        }
        
        public void GetLotteryCountAsync(object userState) {
            if ((this.onBeginGetLotteryCountDelegate == null)) {
                this.onBeginGetLotteryCountDelegate = new BeginOperationDelegate(this.OnBeginGetLotteryCount);
            }
            if ((this.onEndGetLotteryCountDelegate == null)) {
                this.onEndGetLotteryCountDelegate = new EndOperationDelegate(this.OnEndGetLotteryCount);
            }
            if ((this.onGetLotteryCountCompletedDelegate == null)) {
                this.onGetLotteryCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteryCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteryCountDelegate, null, this.onEndGetLotteryCountDelegate, this.onGetLotteryCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLotteriesByIndex(int index_from, int index_to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteriesByIndex(index_from, index_to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLotteriesByIndex(System.IAsyncResult result) {
            return base.Channel.EndGetLotteriesByIndex(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteriesByIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int index_from = ((int)(inValues[0]));
            int index_to = ((int)(inValues[1]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLotteriesByIndex(index_from, index_to, callback, asyncState);
        }
        
        private object[] OnEndGetLotteriesByIndex(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLotteriesByIndex(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteriesByIndexCompleted(object state) {
            if ((this.GetLotteriesByIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteriesByIndexCompleted(this, new GetLotteriesByIndexCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteriesByIndexAsync(int index_from, int index_to) {
            this.GetLotteriesByIndexAsync(index_from, index_to, null);
        }
        
        public void GetLotteriesByIndexAsync(int index_from, int index_to, object userState) {
            if ((this.onBeginGetLotteriesByIndexDelegate == null)) {
                this.onBeginGetLotteriesByIndexDelegate = new BeginOperationDelegate(this.OnBeginGetLotteriesByIndex);
            }
            if ((this.onEndGetLotteriesByIndexDelegate == null)) {
                this.onEndGetLotteriesByIndexDelegate = new EndOperationDelegate(this.OnEndGetLotteriesByIndex);
            }
            if ((this.onGetLotteriesByIndexCompletedDelegate == null)) {
                this.onGetLotteriesByIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteriesByIndexCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteriesByIndexDelegate, new object[] {
                        index_from,
                        index_to}, this.onEndGetLotteriesByIndexDelegate, this.onGetLotteriesByIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLotteriesByIssue(int issue_from, int issue_to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteriesByIssue(issue_from, issue_to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLotteriesByIssue(System.IAsyncResult result) {
            return base.Channel.EndGetLotteriesByIssue(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteriesByIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int issue_from = ((int)(inValues[0]));
            int issue_to = ((int)(inValues[1]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLotteriesByIssue(issue_from, issue_to, callback, asyncState);
        }
        
        private object[] OnEndGetLotteriesByIssue(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLotteriesByIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteriesByIssueCompleted(object state) {
            if ((this.GetLotteriesByIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteriesByIssueCompleted(this, new GetLotteriesByIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteriesByIssueAsync(int issue_from, int issue_to) {
            this.GetLotteriesByIssueAsync(issue_from, issue_to, null);
        }
        
        public void GetLotteriesByIssueAsync(int issue_from, int issue_to, object userState) {
            if ((this.onBeginGetLotteriesByIssueDelegate == null)) {
                this.onBeginGetLotteriesByIssueDelegate = new BeginOperationDelegate(this.OnBeginGetLotteriesByIssue);
            }
            if ((this.onEndGetLotteriesByIssueDelegate == null)) {
                this.onEndGetLotteriesByIssueDelegate = new EndOperationDelegate(this.OnEndGetLotteriesByIssue);
            }
            if ((this.onGetLotteriesByIssueCompletedDelegate == null)) {
                this.onGetLotteriesByIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteriesByIssueCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteriesByIssueDelegate, new object[] {
                        issue_from,
                        issue_to}, this.onEndGetLotteriesByIssueDelegate, this.onGetLotteriesByIssueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetDataVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetDataVersion(System.IAsyncResult result) {
            return base.Channel.EndGetDataVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetDataVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetDataVersion(callback, asyncState);
        }
        
        private object[] OnEndGetDataVersion(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetDataVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataVersionCompleted(object state) {
            if ((this.GetDataVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataVersionCompleted(this, new GetDataVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataVersionAsync() {
            this.GetDataVersionAsync(null);
        }
        
        public void GetDataVersionAsync(object userState) {
            if ((this.onBeginGetDataVersionDelegate == null)) {
                this.onBeginGetDataVersionDelegate = new BeginOperationDelegate(this.OnBeginGetDataVersion);
            }
            if ((this.onEndGetDataVersionDelegate == null)) {
                this.onEndGetDataVersionDelegate = new EndOperationDelegate(this.OnEndGetDataVersion);
            }
            if ((this.onGetDataVersionCompletedDelegate == null)) {
                this.onGetDataVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataVersionDelegate, null, this.onEndGetDataVersionDelegate, this.onGetDataVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetAttributesTemplate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAttributesTemplate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetAttributesTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetAttributesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetAttributesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetAttributesTemplate(callback, asyncState);
        }
        
        private object[] OnEndGetAttributesTemplate(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetAttributesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAttributesTemplateCompleted(object state) {
            if ((this.GetAttributesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAttributesTemplateCompleted(this, new GetAttributesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAttributesTemplateAsync() {
            this.GetAttributesTemplateAsync(null);
        }
        
        public void GetAttributesTemplateAsync(object userState) {
            if ((this.onBeginGetAttributesTemplateDelegate == null)) {
                this.onBeginGetAttributesTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetAttributesTemplate);
            }
            if ((this.onEndGetAttributesTemplateDelegate == null)) {
                this.onEndGetAttributesTemplateDelegate = new EndOperationDelegate(this.OnEndGetAttributesTemplate);
            }
            if ((this.onGetAttributesTemplateCompletedDelegate == null)) {
                this.onGetAttributesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAttributesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAttributesTemplateDelegate, null, this.onEndGetAttributesTemplateDelegate, this.onGetAttributesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLatestAttributes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestAttributes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLatestAttributes(System.IAsyncResult result) {
            return base.Channel.EndGetLatestAttributes(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLatestAttributes(callback, asyncState);
        }
        
        private object[] OnEndGetLatestAttributes(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLatestAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestAttributesCompleted(object state) {
            if ((this.GetLatestAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestAttributesCompleted(this, new GetLatestAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestAttributesAsync() {
            this.GetLatestAttributesAsync(null);
        }
        
        public void GetLatestAttributesAsync(object userState) {
            if ((this.onBeginGetLatestAttributesDelegate == null)) {
                this.onBeginGetLatestAttributesDelegate = new BeginOperationDelegate(this.OnBeginGetLatestAttributes);
            }
            if ((this.onEndGetLatestAttributesDelegate == null)) {
                this.onEndGetLatestAttributesDelegate = new EndOperationDelegate(this.OnEndGetLatestAttributes);
            }
            if ((this.onGetLatestAttributesCompletedDelegate == null)) {
                this.onGetLatestAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestAttributesDelegate, null, this.onEndGetLatestAttributesDelegate, this.onGetLatestAttributesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLatestReleaseInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestReleaseInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLatestReleaseInfo(System.IAsyncResult result) {
            return base.Channel.EndGetLatestReleaseInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestReleaseInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLatestReleaseInfo(callback, asyncState);
        }
        
        private object[] OnEndGetLatestReleaseInfo(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLatestReleaseInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestReleaseInfoCompleted(object state) {
            if ((this.GetLatestReleaseInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestReleaseInfoCompleted(this, new GetLatestReleaseInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestReleaseInfoAsync() {
            this.GetLatestReleaseInfoAsync(null);
        }
        
        public void GetLatestReleaseInfoAsync(object userState) {
            if ((this.onBeginGetLatestReleaseInfoDelegate == null)) {
                this.onBeginGetLatestReleaseInfoDelegate = new BeginOperationDelegate(this.OnBeginGetLatestReleaseInfo);
            }
            if ((this.onEndGetLatestReleaseInfoDelegate == null)) {
                this.onEndGetLatestReleaseInfoDelegate = new EndOperationDelegate(this.OnEndGetLatestReleaseInfo);
            }
            if ((this.onGetLatestReleaseInfoCompletedDelegate == null)) {
                this.onGetLatestReleaseInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestReleaseInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestReleaseInfoDelegate, null, this.onEndGetLatestReleaseInfoDelegate, this.onGetLatestReleaseInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetMatrixTableItem(int candidateCount, int selectCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatrixTableItem(candidateCount, selectCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetMatrixTableItem(System.IAsyncResult result) {
            return base.Channel.EndGetMatrixTableItem(result);
        }
        
        private System.IAsyncResult OnBeginGetMatrixTableItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int candidateCount = ((int)(inValues[0]));
            int selectCount = ((int)(inValues[1]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetMatrixTableItem(candidateCount, selectCount, callback, asyncState);
        }
        
        private object[] OnEndGetMatrixTableItem(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetMatrixTableItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMatrixTableItemCompleted(object state) {
            if ((this.GetMatrixTableItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatrixTableItemCompleted(this, new GetMatrixTableItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatrixTableItemAsync(int candidateCount, int selectCount) {
            this.GetMatrixTableItemAsync(candidateCount, selectCount, null);
        }
        
        public void GetMatrixTableItemAsync(int candidateCount, int selectCount, object userState) {
            if ((this.onBeginGetMatrixTableItemDelegate == null)) {
                this.onBeginGetMatrixTableItemDelegate = new BeginOperationDelegate(this.OnBeginGetMatrixTableItem);
            }
            if ((this.onEndGetMatrixTableItemDelegate == null)) {
                this.onEndGetMatrixTableItemDelegate = new EndOperationDelegate(this.OnEndGetMatrixTableItem);
            }
            if ((this.onGetMatrixTableItemCompletedDelegate == null)) {
                this.onGetMatrixTableItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatrixTableItemCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatrixTableItemDelegate, new object[] {
                        candidateCount,
                        selectCount}, this.onEndGetMatrixTableItemDelegate, this.onGetMatrixTableItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetHelp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHelp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetHelp(System.IAsyncResult result) {
            return base.Channel.EndGetHelp(result);
        }
        
        private System.IAsyncResult OnBeginGetHelp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetHelp(callback, asyncState);
        }
        
        private object[] OnEndGetHelp(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetHelp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHelpCompleted(object state) {
            if ((this.GetHelpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHelpCompleted(this, new GetHelpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHelpAsync() {
            this.GetHelpAsync(null);
        }
        
        public void GetHelpAsync(object userState) {
            if ((this.onBeginGetHelpDelegate == null)) {
                this.onBeginGetHelpDelegate = new BeginOperationDelegate(this.OnBeginGetHelp);
            }
            if ((this.onEndGetHelpDelegate == null)) {
                this.onEndGetHelpDelegate = new EndOperationDelegate(this.OnEndGetHelp);
            }
            if ((this.onGetHelpCompletedDelegate == null)) {
                this.onGetHelpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHelpCompleted);
            }
            base.InvokeAsync(this.onBeginGetHelpDelegate, null, this.onEndGetHelpDelegate, this.onGetHelpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetAllLotteriesBase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLotteriesBase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetAllLotteriesBase(System.IAsyncResult result) {
            return base.Channel.EndGetAllLotteriesBase(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLotteriesBase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetAllLotteriesBase(callback, asyncState);
        }
        
        private object[] OnEndGetAllLotteriesBase(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetAllLotteriesBase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLotteriesBaseCompleted(object state) {
            if ((this.GetAllLotteriesBaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLotteriesBaseCompleted(this, new GetAllLotteriesBaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLotteriesBaseAsync() {
            this.GetAllLotteriesBaseAsync(null);
        }
        
        public void GetAllLotteriesBaseAsync(object userState) {
            if ((this.onBeginGetAllLotteriesBaseDelegate == null)) {
                this.onBeginGetAllLotteriesBaseDelegate = new BeginOperationDelegate(this.OnBeginGetAllLotteriesBase);
            }
            if ((this.onEndGetAllLotteriesBaseDelegate == null)) {
                this.onEndGetAllLotteriesBaseDelegate = new EndOperationDelegate(this.OnEndGetAllLotteriesBase);
            }
            if ((this.onGetAllLotteriesBaseCompletedDelegate == null)) {
                this.onGetAllLotteriesBaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLotteriesBaseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLotteriesBaseDelegate, null, this.onEndGetAllLotteriesBaseDelegate, this.onGetAllLotteriesBaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLotteriesBaseByIndex(int index_from, int index_to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteriesBaseByIndex(index_from, index_to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLotteriesBaseByIndex(System.IAsyncResult result) {
            return base.Channel.EndGetLotteriesBaseByIndex(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteriesBaseByIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int index_from = ((int)(inValues[0]));
            int index_to = ((int)(inValues[1]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLotteriesBaseByIndex(index_from, index_to, callback, asyncState);
        }
        
        private object[] OnEndGetLotteriesBaseByIndex(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLotteriesBaseByIndex(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteriesBaseByIndexCompleted(object state) {
            if ((this.GetLotteriesBaseByIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteriesBaseByIndexCompleted(this, new GetLotteriesBaseByIndexCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteriesBaseByIndexAsync(int index_from, int index_to) {
            this.GetLotteriesBaseByIndexAsync(index_from, index_to, null);
        }
        
        public void GetLotteriesBaseByIndexAsync(int index_from, int index_to, object userState) {
            if ((this.onBeginGetLotteriesBaseByIndexDelegate == null)) {
                this.onBeginGetLotteriesBaseByIndexDelegate = new BeginOperationDelegate(this.OnBeginGetLotteriesBaseByIndex);
            }
            if ((this.onEndGetLotteriesBaseByIndexDelegate == null)) {
                this.onEndGetLotteriesBaseByIndexDelegate = new EndOperationDelegate(this.OnEndGetLotteriesBaseByIndex);
            }
            if ((this.onGetLotteriesBaseByIndexCompletedDelegate == null)) {
                this.onGetLotteriesBaseByIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteriesBaseByIndexCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteriesBaseByIndexDelegate, new object[] {
                        index_from,
                        index_to}, this.onEndGetLotteriesBaseByIndexDelegate, this.onGetLotteriesBaseByIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLotteriesBaseByIssue(int issue_from, int issue_to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteriesBaseByIssue(issue_from, issue_to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetLotteriesBaseByIssue(System.IAsyncResult result) {
            return base.Channel.EndGetLotteriesBaseByIssue(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteriesBaseByIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int issue_from = ((int)(inValues[0]));
            int issue_to = ((int)(inValues[1]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLotteriesBaseByIssue(issue_from, issue_to, callback, asyncState);
        }
        
        private object[] OnEndGetLotteriesBaseByIssue(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLotteriesBaseByIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteriesBaseByIssueCompleted(object state) {
            if ((this.GetLotteriesBaseByIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteriesBaseByIssueCompleted(this, new GetLotteriesBaseByIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteriesBaseByIssueAsync(int issue_from, int issue_to) {
            this.GetLotteriesBaseByIssueAsync(issue_from, issue_to, null);
        }
        
        public void GetLotteriesBaseByIssueAsync(int issue_from, int issue_to, object userState) {
            if ((this.onBeginGetLotteriesBaseByIssueDelegate == null)) {
                this.onBeginGetLotteriesBaseByIssueDelegate = new BeginOperationDelegate(this.OnBeginGetLotteriesBaseByIssue);
            }
            if ((this.onEndGetLotteriesBaseByIssueDelegate == null)) {
                this.onEndGetLotteriesBaseByIssueDelegate = new EndOperationDelegate(this.OnEndGetLotteriesBaseByIssue);
            }
            if ((this.onGetLotteriesBaseByIssueCompletedDelegate == null)) {
                this.onGetLotteriesBaseByIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteriesBaseByIssueCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteriesBaseByIssueDelegate, new object[] {
                        issue_from,
                        issue_to}, this.onEndGetLotteriesBaseByIssueDelegate, this.onGetLotteriesBaseByIssueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetVersion(ref int version, ref long revisions, ref int latestIssue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVersion(ref version, ref revisions, ref latestIssue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LuckyBallData.LBCloudService.ISqlService.EndGetVersion(ref int version, ref long revisions, ref int latestIssue, System.IAsyncResult result) {
            base.Channel.EndGetVersion(ref version, ref revisions, ref latestIssue, result);
        }
        
        private System.IAsyncResult OnBeginGetVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int version = ((int)(inValues[0]));
            long revisions = ((long)(inValues[1]));
            int latestIssue = ((int)(inValues[2]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetVersion(ref version, ref revisions, ref latestIssue, callback, asyncState);
        }
        
        private object[] OnEndGetVersion(System.IAsyncResult result) {
            int version = this.GetDefaultValueForInitialization<int>();
            long revisions = this.GetDefaultValueForInitialization<long>();
            int latestIssue = this.GetDefaultValueForInitialization<int>();
            ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetVersion(ref version, ref revisions, ref latestIssue, result);
            return new object[] {
                    version,
                    revisions,
                    latestIssue};
        }
        
        private void OnGetVersionCompleted(object state) {
            if ((this.GetVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVersionAsync(int version, long revisions, int latestIssue) {
            this.GetVersionAsync(version, revisions, latestIssue, null);
        }
        
        public void GetVersionAsync(int version, long revisions, int latestIssue, object userState) {
            if ((this.onBeginGetVersionDelegate == null)) {
                this.onBeginGetVersionDelegate = new BeginOperationDelegate(this.OnBeginGetVersion);
            }
            if ((this.onEndGetVersionDelegate == null)) {
                this.onEndGetVersionDelegate = new EndOperationDelegate(this.OnEndGetVersion);
            }
            if ((this.onGetVersionCompletedDelegate == null)) {
                this.onGetVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetVersionDelegate, new object[] {
                        version,
                        revisions,
                        latestIssue}, this.onEndGetVersionDelegate, this.onGetVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginRegisterUserChannel(string userId, string channelUri, string platform, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterUserChannel(userId, channelUri, platform, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LuckyBallData.LBCloudService.ISqlService.EndRegisterUserChannel(System.IAsyncResult result) {
            base.Channel.EndRegisterUserChannel(result);
        }
        
        private System.IAsyncResult OnBeginRegisterUserChannel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string channelUri = ((string)(inValues[1]));
            string platform = ((string)(inValues[2]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginRegisterUserChannel(userId, channelUri, platform, callback, asyncState);
        }
        
        private object[] OnEndRegisterUserChannel(System.IAsyncResult result) {
            ((LuckyBallData.LBCloudService.ISqlService)(this)).EndRegisterUserChannel(result);
            return null;
        }
        
        private void OnRegisterUserChannelCompleted(object state) {
            if ((this.RegisterUserChannelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterUserChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterUserChannelAsync(string userId, string channelUri, string platform) {
            this.RegisterUserChannelAsync(userId, channelUri, platform, null);
        }
        
        public void RegisterUserChannelAsync(string userId, string channelUri, string platform, object userState) {
            if ((this.onBeginRegisterUserChannelDelegate == null)) {
                this.onBeginRegisterUserChannelDelegate = new BeginOperationDelegate(this.OnBeginRegisterUserChannel);
            }
            if ((this.onEndRegisterUserChannelDelegate == null)) {
                this.onEndRegisterUserChannelDelegate = new EndOperationDelegate(this.OnEndRegisterUserChannel);
            }
            if ((this.onRegisterUserChannelCompletedDelegate == null)) {
                this.onRegisterUserChannelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterUserChannelCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterUserChannelDelegate, new object[] {
                        userId,
                        channelUri,
                        platform}, this.onEndRegisterUserChannelDelegate, this.onRegisterUserChannelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetUserChannels(string platform, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserChannels(platform, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> LuckyBallData.LBCloudService.ISqlService.EndGetUserChannels(System.IAsyncResult result) {
            return base.Channel.EndGetUserChannels(result);
        }
        
        private System.IAsyncResult OnBeginGetUserChannels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string platform = ((string)(inValues[0]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetUserChannels(platform, callback, asyncState);
        }
        
        private object[] OnEndGetUserChannels(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetUserChannels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserChannelsCompleted(object state) {
            if ((this.GetUserChannelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserChannelsCompleted(this, new GetUserChannelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserChannelsAsync(string platform) {
            this.GetUserChannelsAsync(platform, null);
        }
        
        public void GetUserChannelsAsync(string platform, object userState) {
            if ((this.onBeginGetUserChannelsDelegate == null)) {
                this.onBeginGetUserChannelsDelegate = new BeginOperationDelegate(this.OnBeginGetUserChannels);
            }
            if ((this.onEndGetUserChannelsDelegate == null)) {
                this.onEndGetUserChannelsDelegate = new EndOperationDelegate(this.OnEndGetUserChannels);
            }
            if ((this.onGetUserChannelsCompletedDelegate == null)) {
                this.onGetUserChannelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserChannelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserChannelsDelegate, new object[] {
                        platform}, this.onEndGetUserChannelsDelegate, this.onGetUserChannelsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginRememberUserLastLoginDate(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRememberUserLastLoginDate(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LuckyBallData.LBCloudService.ISqlService.EndRememberUserLastLoginDate(System.IAsyncResult result) {
            base.Channel.EndRememberUserLastLoginDate(result);
        }
        
        private System.IAsyncResult OnBeginRememberUserLastLoginDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginRememberUserLastLoginDate(userId, callback, asyncState);
        }
        
        private object[] OnEndRememberUserLastLoginDate(System.IAsyncResult result) {
            ((LuckyBallData.LBCloudService.ISqlService)(this)).EndRememberUserLastLoginDate(result);
            return null;
        }
        
        private void OnRememberUserLastLoginDateCompleted(object state) {
            if ((this.RememberUserLastLoginDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RememberUserLastLoginDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RememberUserLastLoginDateAsync(string userId) {
            this.RememberUserLastLoginDateAsync(userId, null);
        }
        
        public void RememberUserLastLoginDateAsync(string userId, object userState) {
            if ((this.onBeginRememberUserLastLoginDateDelegate == null)) {
                this.onBeginRememberUserLastLoginDateDelegate = new BeginOperationDelegate(this.OnBeginRememberUserLastLoginDate);
            }
            if ((this.onEndRememberUserLastLoginDateDelegate == null)) {
                this.onEndRememberUserLastLoginDateDelegate = new EndOperationDelegate(this.OnEndRememberUserLastLoginDate);
            }
            if ((this.onRememberUserLastLoginDateCompletedDelegate == null)) {
                this.onRememberUserLastLoginDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRememberUserLastLoginDateCompleted);
            }
            base.InvokeAsync(this.onBeginRememberUserLastLoginDateDelegate, new object[] {
                        userId}, this.onEndRememberUserLastLoginDateDelegate, this.onRememberUserLastLoginDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetLatestSoftwareVersion(ref int version, ref bool schemaChanged, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestSoftwareVersion(ref version, ref schemaChanged, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LuckyBallData.LBCloudService.ISqlService.EndGetLatestSoftwareVersion(ref int version, ref bool schemaChanged, System.IAsyncResult result) {
            base.Channel.EndGetLatestSoftwareVersion(ref version, ref schemaChanged, result);
        }
        
        private System.IAsyncResult OnBeginGetLatestSoftwareVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int version = ((int)(inValues[0]));
            bool schemaChanged = ((bool)(inValues[1]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetLatestSoftwareVersion(ref version, ref schemaChanged, callback, asyncState);
        }
        
        private object[] OnEndGetLatestSoftwareVersion(System.IAsyncResult result) {
            int version = this.GetDefaultValueForInitialization<int>();
            bool schemaChanged = this.GetDefaultValueForInitialization<bool>();
            ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetLatestSoftwareVersion(ref version, ref schemaChanged, result);
            return new object[] {
                    version,
                    schemaChanged};
        }
        
        private void OnGetLatestSoftwareVersionCompleted(object state) {
            if ((this.GetLatestSoftwareVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestSoftwareVersionCompleted(this, new GetLatestSoftwareVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestSoftwareVersionAsync(int version, bool schemaChanged) {
            this.GetLatestSoftwareVersionAsync(version, schemaChanged, null);
        }
        
        public void GetLatestSoftwareVersionAsync(int version, bool schemaChanged, object userState) {
            if ((this.onBeginGetLatestSoftwareVersionDelegate == null)) {
                this.onBeginGetLatestSoftwareVersionDelegate = new BeginOperationDelegate(this.OnBeginGetLatestSoftwareVersion);
            }
            if ((this.onEndGetLatestSoftwareVersionDelegate == null)) {
                this.onEndGetLatestSoftwareVersionDelegate = new EndOperationDelegate(this.OnEndGetLatestSoftwareVersion);
            }
            if ((this.onGetLatestSoftwareVersionCompletedDelegate == null)) {
                this.onGetLatestSoftwareVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestSoftwareVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestSoftwareVersionDelegate, new object[] {
                        version,
                        schemaChanged}, this.onEndGetLatestSoftwareVersionDelegate, this.onGetLatestSoftwareVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LuckyBallData.LBCloudService.ISqlService.BeginGetReleaseNotes(int fromVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReleaseNotes(fromVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LuckyBallData.LBCloudService.ISqlService.EndGetReleaseNotes(System.IAsyncResult result) {
            return base.Channel.EndGetReleaseNotes(result);
        }
        
        private System.IAsyncResult OnBeginGetReleaseNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int fromVersion = ((int)(inValues[0]));
            return ((LuckyBallData.LBCloudService.ISqlService)(this)).BeginGetReleaseNotes(fromVersion, callback, asyncState);
        }
        
        private object[] OnEndGetReleaseNotes(System.IAsyncResult result) {
            string retVal = ((LuckyBallData.LBCloudService.ISqlService)(this)).EndGetReleaseNotes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReleaseNotesCompleted(object state) {
            if ((this.GetReleaseNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReleaseNotesCompleted(this, new GetReleaseNotesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReleaseNotesAsync(int fromVersion) {
            this.GetReleaseNotesAsync(fromVersion, null);
        }
        
        public void GetReleaseNotesAsync(int fromVersion, object userState) {
            if ((this.onBeginGetReleaseNotesDelegate == null)) {
                this.onBeginGetReleaseNotesDelegate = new BeginOperationDelegate(this.OnBeginGetReleaseNotes);
            }
            if ((this.onEndGetReleaseNotesDelegate == null)) {
                this.onEndGetReleaseNotesDelegate = new EndOperationDelegate(this.OnEndGetReleaseNotes);
            }
            if ((this.onGetReleaseNotesCompletedDelegate == null)) {
                this.onGetReleaseNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReleaseNotesCompleted);
            }
            base.InvokeAsync(this.onBeginGetReleaseNotesDelegate, new object[] {
                        fromVersion}, this.onEndGetReleaseNotesDelegate, this.onGetReleaseNotesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LuckyBallData.LBCloudService.ISqlService CreateChannel() {
            return new SqlServiceClientChannel(this);
        }
        
        private class SqlServiceClientChannel : ChannelBase<LuckyBallData.LBCloudService.ISqlService>, LuckyBallData.LBCloudService.ISqlService {
            
            public SqlServiceClientChannel(System.ServiceModel.ClientBase<LuckyBallData.LBCloudService.ISqlService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLotteryData(int issue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = issue;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteryData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLotteryData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLotteryData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllLotteries(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllLotteries", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAllLotteries(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAllLotteries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteryCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLotteryCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetLotteryCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetLotteryCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteriesByIndex(int index_from, int index_to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = index_from;
                _args[1] = index_to;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteriesByIndex", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLotteriesByIndex(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLotteriesByIndex", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteriesByIssue(int issue_from, int issue_to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = issue_from;
                _args[1] = issue_to;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteriesByIssue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLotteriesByIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLotteriesByIssue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataVersion(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDataVersion", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDataVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDataVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAttributesTemplate(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAttributesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAttributesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAttributesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestAttributes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLatestAttributes", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLatestAttributes(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLatestAttributes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestReleaseInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLatestReleaseInfo", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLatestReleaseInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLatestReleaseInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMatrixTableItem(int candidateCount, int selectCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = candidateCount;
                _args[1] = selectCount;
                System.IAsyncResult _result = base.BeginInvoke("GetMatrixTableItem", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetMatrixTableItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetMatrixTableItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHelp(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetHelp", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetHelp(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetHelp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllLotteriesBase(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllLotteriesBase", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAllLotteriesBase(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAllLotteriesBase", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteriesBaseByIndex(int index_from, int index_to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = index_from;
                _args[1] = index_to;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteriesBaseByIndex", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLotteriesBaseByIndex(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLotteriesBaseByIndex", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteriesBaseByIssue(int issue_from, int issue_to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = issue_from;
                _args[1] = issue_to;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteriesBaseByIssue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLotteriesBaseByIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLotteriesBaseByIssue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVersion(ref int version, ref long revisions, ref int latestIssue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = version;
                _args[1] = revisions;
                _args[2] = latestIssue;
                System.IAsyncResult _result = base.BeginInvoke("GetVersion", _args, callback, asyncState);
                version = ((int)(_args[0]));
                revisions = ((long)(_args[1]));
                latestIssue = ((int)(_args[2]));
                return _result;
            }
            
            public void EndGetVersion(ref int version, ref long revisions, ref int latestIssue, System.IAsyncResult result) {
                object[] _args = new object[3];
                _args[0] = version;
                _args[1] = revisions;
                _args[2] = latestIssue;
                base.EndInvoke("GetVersion", _args, result);
                version = ((int)(_args[0]));
                revisions = ((long)(_args[1]));
                latestIssue = ((int)(_args[2]));
            }
            
            public System.IAsyncResult BeginRegisterUserChannel(string userId, string channelUri, string platform, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = channelUri;
                _args[2] = platform;
                System.IAsyncResult _result = base.BeginInvoke("RegisterUserChannel", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegisterUserChannel(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RegisterUserChannel", _args, result);
            }
            
            public System.IAsyncResult BeginGetUserChannels(string platform, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = platform;
                System.IAsyncResult _result = base.BeginInvoke("GetUserChannels", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetUserChannels(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetUserChannels", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRememberUserLastLoginDate(string userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("RememberUserLastLoginDate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRememberUserLastLoginDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RememberUserLastLoginDate", _args, result);
            }
            
            public System.IAsyncResult BeginGetLatestSoftwareVersion(ref int version, ref bool schemaChanged, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = version;
                _args[1] = schemaChanged;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestSoftwareVersion", _args, callback, asyncState);
                version = ((int)(_args[0]));
                schemaChanged = ((bool)(_args[1]));
                return _result;
            }
            
            public void EndGetLatestSoftwareVersion(ref int version, ref bool schemaChanged, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = version;
                _args[1] = schemaChanged;
                base.EndInvoke("GetLatestSoftwareVersion", _args, result);
                version = ((int)(_args[0]));
                schemaChanged = ((bool)(_args[1]));
            }
            
            public System.IAsyncResult BeginGetReleaseNotes(int fromVersion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fromVersion;
                System.IAsyncResult _result = base.BeginInvoke("GetReleaseNotes", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetReleaseNotes(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetReleaseNotes", _args, result)));
                return _result;
            }
        }
    }
}
